#!/usr/bin/env python

PACKAGE = "espros_cam611"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

range_data_type_enum = gen.enum([ gen.const("Distance", int_t, 0, "Distance"),
                             gen.const("Distance_Amplitude", int_t, 1, "Distance and Amplitude")
                             ], "An enum to set image type")

mod_freq_enum = gen.enum([ gen.const("10MHz", int_t, 0, "10MHz"),
                           gen.const("20MHz", int_t, 1, "20MHz"),
                           ], "An enum to set modulation frequency")

######  Name                     Type   Reconfiguration level  Description     Default Min  Max
### Acquisition Control
gen.add("range_data_type",       int_t,    0,  "Range data type",  1, 0, 1, edit_method = range_data_type_enum)
gen.add("frame_rate",            double_t, 0,  "Frame rate [Hz]",  30.0, 0, 1000)
gen.add("start_stream",          bool_t,   0,  "Start / Stop image acquisition streaming",  False)
gen.add("trigger_single_shot",   bool_t,   0,  "Single image acquisition",  False)
gen.add("modulation_frequency",  int_t,    0,  "Modulation frequency",  1, 0, 1, edit_method = mod_freq_enum)
gen.add("auto_integration_time", bool_t,   0,  "Single image acquisition",  True)
gen.add("integration_time_tof",  int_t,    0,  "Integration time TOF  [uS]",      200, 0, 1600)
gen.add("kalman_factor",         double_t, 0,  "Kalman filter gain coefficient",  0.01, 0, 1)
gen.add("kalman_threshold",      int_t,    0,  "Kalman filter threshold [mm]",    300, 0, 10000)

exit(gen.generate(PACKAGE, "cam611_range", "cam611_range"))

